# ShopFlow/nginx/conf.d/cms.conf

server {
    listen 80;
    server_name cms.yourdomain.com; # <<< เปลี่ยนเป็น Subdomain/Domain จริงของคุณ
    return 301 https://$host$request_uri; # Redirect HTTP ไป HTTPS เสมอ
}

server {
    listen 443 ssl;
    server_name cms.yourdomain.com; # <<< เปลี่ยนเป็น Subdomain/Domain จริงของคุณ

    # ตำแหน่งของ SSL Certificate (ต้อง Mount เข้ามาใน Docker Container)
    ssl_certificate /etc/letsencrypt/live/cms.yourdomain.com/fullchain.pem; # <<< เปลี่ยนเป็น Path จริง
    ssl_certificate_key /etc/letsencrypt/live/cms.yourdomain.com/privkey.pem; # <<< เปลี่ยนเป็น Path จริง

    # SSL Configuration (เหมือนกับ pos.conf)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1h;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    location / {
        # proxy_pass จะชี้ไปยัง Docker Service Name (cms-web) และพอร์ตภายใน (3000)
        proxy_pass http://cms-web:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}